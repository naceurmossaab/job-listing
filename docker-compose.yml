version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nestjs:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:3000/health" ]
      interval: 30s
      timeout: 5s
      retries: 3

  angular:
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4200:80"
    depends_on:
      nestjs:
        condition: service_healthy

volumes:
  pgdata:
